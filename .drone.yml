trigger_common: &trigger_common
  image: plugins/downstream
  fork: true
  secrets: [ downstream_token, downstream_server ]
  params:
    - FORCED_OS_VERSION=centos7



pipeline:
  docker:
    image: metwork/drone-docker-specific-image:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root:/root
    commands:
      - HASH_BEFORE=`docker images -q metwork/mfext-centos7-buildimage:${DRONE_BRANCH}`
      - if test "${DRONE_BRANCH}" = "master"; then
          docker build -t metwork/mfext-centos7-buildimage:master -t metwork/mfext-centos7-buildimage:latest .;
        else
          docker build -t metwork/mfext-centos7-buildimage:${DRONE_BRANCH} .;
        fi
      - HASH_AFTER=`docker images -q metwork/mfext-centos7-buildimage:${DRONE_BRANCH}`
      - if test "$${HASH_BEFORE}" = "$${HASH_AFTER}"; then
          touch .drone_downstream_bypass;
        else
          if test "${DRONE_BRANCH}" = "master"; then
            docker push metwork/mfext-centos7-buildimage:${DRONE_BRANCH};
            docker push metwork/mfext-centos7-buildimage:latest;
          elif test "${DRONE_BRANCH}" = "integration"; then
            docker push metwork/mfext-centos7-buildimage:${DRONE_BRANCH};
          fi;
        fi
    when:
      event: push
  trigger_integration:
    <<: *trigger_common
    repositories:
      - metwork-framework/mfext@integration
    when:
      status: success
      event: push
      branch: integration
  trigger_master:
    <<: *trigger_common
    repositories:
      - metwork-framework/mfext@master
    when:
      status: success
      event: push
      branch: master

branches: [ master, integration, ci_*, pci_* ]
